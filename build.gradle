import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'org.jetbrains.kotlin.jvm' version '2.1.20'
}

group = 'io.github.binaryfoo'
version = '0.1.10-SNAPSHOT'
description = 'Some decoders for the data used in EMV credit card transactions'

repositories {
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots'
        allowInsecureProtocol = true
    }
}

ext.kotlin_version = '2.1.20'

dependencies {
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
    implementation 'org.yaml:snakeyaml:2.4'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task javadocJar(type: Jar) {
    archiveClassifier.set('javadoc')
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allJava
}

task fatJar(type: Jar) {
    archiveClassifier = 'all'
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    } {
        excludes += "META-INF/*.SF"
        excludes += "META-INF/*.DSA"
        excludes += "META-INF/*.RSA"
        excludes += "META-INF/LICENSE.txt"
        excludes += "META-INF/NOTICE.txt"
        excludes += "META-INF/versions/9/module-info.class"
    }
}

artifacts {
    archives javadocJar
    archives sourcesJar
    archives fatJar
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = '17'
    }
}